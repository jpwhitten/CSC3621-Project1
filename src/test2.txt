CSC2022 – Team Project Individual Report

For this module I had to work as part of a team using software engineering principles to create an end product. My team and I decided that we would be creating an application for Tanfield Railway, a railway museum in north east England.  
My Role and responsibilities
At the start of the project we allocated roles and corresponding duties to each member of the team. It was decided that we would split the project into 5 sections: Research, Design, Implementation, Testing and Documentation, and that people would be allocated roles in the section they wanted to work on. The role I was initially allocated was lead developer but I was later made team leader.
As a developer my responsibilities were as follows: 
•	Assessing the feasibility of the design specification as such that It would not be too difficult to actually create the application.
•	Developing the app from a design brief into a fully functional model.
•	Ensuring the code produced actually compiles into a working application.
•	Testing the application during the development to spot and fix any bugs.
•	To write clean code with clear, informative comments.
•	To work closely with designers and testers to communicate any ideas from a developers perspective.
•	Regularly save any progress I made on the application to GitHub.
As the lead developer my responsibilities were as follows: 
•	Communicate any progress to the team.
•	Distribute the workload fairly across the developer team.
•	Assist in tackling any problems encountered by my team if needed.
•	Make sure my team is updated on any changes that may have occurred.
As the team leader my responsibilities were as follows: 
•	Organising and running of team meetings.
•	Ensuring the project is timely, creating a timeline of completion dates.
•	Ensuring there is a good communication between team members.
•	Knowing the deadlines and ensuring all relevant members are also aware of deadlines.
•	Setting up appropriate informal deadlines for each phase of the project.
•	Distributing the workload fairly and making sure ach sub-team has started their work at the correct time.

What I did in each phase
Our Team Split the project into 4 phases and documentation.
Research and Analysis
In the first phase, market research, I analysed applications with a theme or target audience similar to Tanfield Railways, I took note of features I deemed to be useful or interesting and then addressed the team as to how I think they could be integrated into the application. The challenge here was trying to not only find ideas, but also create new ones that would work well and provide a meaningful contribution the product I was going to be making.
Design 
During the design phase I was mostly responsible for creating the graphical user interface for our application. I had to take the ideas and features we had decided to keep from the market research phase and decide how best to present those features to the user, I had to take into account accessibility, ease of navigation and user interaction whilst also trying to make the application look aesthetically pleasing to the user. To accomplish this task I used Sketch, an application made for GUI design, to create mock interfaces that would be indistinguishable from the real thing.
As lead programmer I also had a role in creating the UML diagrams. I had to use my best judgement and knowledge of Java to try and think about what classes, methods and sometimes variables we would need to create the project. This was very challenging as at the time I did this I had very little experience with android and so I was only able to think of what we would need by using the Model View Controller concept. Though my design ideas were accurate for the most part, the final version of the project did have a fair amount of classes, functions and variables that I could not have predicted at the time. 
Implementation 
During the implementation I was responsible for developing the code required to create the applications features and GUI, I ended up programming around half of the application due to reasons that I shall explain later. Having never programmed for an android device before I had to learn how to use Android’s development model, what built in Android classes there were, how to build Controllers and Views, what built in view elements there were and how to make custom ones and how to get various controllers to communicate with each other. I was also on occasion responsible for creating code.
Alongside my programming I was also responsible for a lot of asset creation for the application. I spent a fair amount of time creating both icons for menus and key frame animations consisting of many images that would be played in sequence to produce an animation.
I also as Lead Programmer had to set standards that should be followed across the team, this mainly consisted of a list of programming conventions that covered file organization, indentation, comments, declarations, statements, white space and naming conventions.
Another duty I had was to assist other in the creation of their part of the application should they need help. Using my newly found knowledge of android I would try to point tem in the right direction.
Testing
During testing I was involved in both black box and white box testing. Throughout the implementation of the project I was constantly testing the code that I had written. To do this I would build the project and test the functionality of the app and see if it was working as expected (black box). If the application had flaws in it or was not working as expected I would then move to white box testing, using the logging functionality provided I would output the variables being tested to see what was actually being produced. I could then fix my code accordingly.
I was also responsible for completing part of the test plan regarding the live journey section of the app. To do this I had to create dummy points of interest and simulated a Journey by walking down a street. I then logged the results of these tests and provided appropriate screenshots of the section working.
Documentation
As of the start of the implantation phase I was allocated the role of team leader, and as such from that point was involved with all the documentation produced from the team.
From this point I was also responsible for the creation of the weekly team leader reports in which I would report on the progress made by my team, our upcoming goals, any problems we have encountered and how I have attempted to mitigate those problems.
In addition to creating the weekly team leader reports, I was also involved in creating some of the content for the specification, more specifically the Class Overview and GUI Diagrams sections, as well as reviewing the entire document before it was submitted.
I was also the only person to work on designing and creating the Trade fair poster, this incudes writing the script visible on the poster, general structure and editing graphics.
What skills I think I have developed or improved during the project
Through this project I have gained both technical and non-technical skills. I have enhanced my Java knowledge by learning about adapters and how they work. I have also learned a vast amount about programming techniques for android devices and mobile devices in general. This includes learning the MVC model in Android, in which I had to learn about android controllers (Activities and Fragments), how to write views in xml and the properties of all the relevant classes to accomplish this. 
This project has taught me a lot about working as part of a team, and the various challenges that come along with it. I have learnt how to effectively communicate my ideas to a group, and also how to analyse and provide constructive criticisms to the ideas of my peers. I have developed my project and time management skills by learning how to split work in to tasks and create reasonable deadlines for these task to be completed.
I have also learnt how to manage a team, how to distribute a workload across to attempt to obtain the best have work completed on time. I have learnt how to also distribute the workload such that different parts of the same task converge at roughly the same time.
I would also say that the experience has also improved my software engineering skills in general, this mainly being because this is my first time developing a piece of software as part of a team. One of the major examples of this is the development of my version control skills through the use of GitHub. I have learnt how to effectively use version control to save and record increments of progress on the project using commands such as commit, push and pull. A skill that I was able to utilise on occasion when I encountered some near irreparable problems with the project. I was able to salvage the project by reverting back to the last commit.
Any problems that I encountered during my project and my solutions I used to attempt to resolve them.
The main problem I encountered during this project was having to try and work with incompetent people. Before the implementation phase started, I as lead developer instructed everyone on the developer team to learn how to develop for android devices. Doing this was supposed to give us an advantaged when we started implementation as everyone would know what they are doing. This did not happen and lead to further problems down the line. When the time came for me to delegate work to my team they all accepted the work without issue, but upon asking to see the work they had produced I was met with excuses as to how they didn’t know what they were doing, this became even more evident when analysing the code they had produced. It was clear they had made no effort to learn what I had asked them to. I tried to mitigate against this by having the people that knew less work on the more simple parts of the application. 
However in some cases this still wasn’t enough as certain team members still were unable to produce any valid contribution to the project, despite constant assistance and guidance from myself. 
In some cases it was clear that members were trying to produce the work asked of them but the progress being made was taking far too long, multiple deadlines were missed because these developers were not responding to my asking for a progress report, or were simply saying that things were progressing more than they actually were. To combat this I would have other more competent developers help out. 
For a while our team had a problem with one member not showing to meetings, and when they did show they did participate in any form of discussion or work. I decided that it would be unfair to not delegate any work to this person so I assigned smaller easy pieces of work to this person, this seemed to work and I found the person actually became more reliable from this.
Another problem I had was keeping in contact with members of my team, specifically during the Easter break. As a certain member does not use and form of social media and previous to the project didn’t have a phone it made staying in contact very difficult. In order to try and mitigate against prolonged periods of silence I asked the member to contact me on a regular basis using a Facebook account he created.
Problems during development were mitigated against by having all members regularly push their work to git hub so we could keep regular updated versions of the project, we used branches so that individuals could easily revert back to a previous version of their work without effecting the progress of others.
Details of what I would do differently
In hindsight the main thing I would have done differently would be to reduce the scope of the project. I mainly say this because of the problems I had with my developers which caused two members of the team to be unfairly burdened with the majority of the workload. Such actions would have helped mitigate the effects of such a problem but it was something that I could not have predicted would happen at the time.
A problem I found was, that because I was burdened with such a large amount of work due to the incapability of my team members, I was placing far too much time into the project to make sure it would get finished. I was also finding it difficult to manage my team whist completing such a large amount of work. If I would do this again I would not take on multiple roles and would focus on one, such as team leader. This would allow me more time to better perform at that specific role rather than having to juggle all the responsibilities that come with taking multiple roles.
Another change I would make is having all people work on every part of the project in some way or another rather than having the ‘pick and choose’ method of assigning roles that my team and I decided upon doing. This maybe would have helped get work done faster and kept everyone on the same page. However I think this may have just resulted in more of the problem I encountered during the project in which people would not be able to ascertain the skills necessary to work on the project in a reasonable amount of time.
Anything I may be able to transfer to a job
The main things I will take away from this project which may help me in industry include a greater understanding of the software engineering life cycle and its various development cycles. Learning how to program for android devices and how to use version control is something that will definitely be useful going forward into a job. 
Another transferable skill would be the communication skills and project/people management skills, particularly the ability to manage a project, mitigating against problems with clever solution to best reach the deadlines. The ability to work closely with new people over an extended period of time is something I can see being useful in industry.
In conclusion, this project has taught me a lot about what it may be like to work in industry including what problems I may encounter, and has given me an idea of how to work around or avoid such problems. I have learned in detail about the software engineering process and about some of the standards used in industry. All things I can see being helpful in the future.

